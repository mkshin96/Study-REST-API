plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'java'
}

group = 'com.whiteshiprest'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.5'
    implementation group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.1.0.RELEASE'

    compileOnly 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
    
    //spring restdocs build
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE'
    
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE'
    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.2.0.RELEASE'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

ext {
    snippetsDir = file('build/generated-snippets')
    set('springCloudVersion', "Greenwich.SR3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar{
    dependsOn asciidoctor

    from ("/${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}